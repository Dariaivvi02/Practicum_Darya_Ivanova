{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"17IcY1UTGzZMUteC1w_OLi1DXlUbhQRJu","timestamp":1730901336055}],"collapsed_sections":["ia9UtA0cU1Iy","eecUb-akU1ji","QGrsZrv5U1s8"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Иванова Дарья Сергеевна"],"metadata":{"id":"5YgNJUoeN2X3"}},{"cell_type":"markdown","source":["# Задание 1"],"metadata":{"id":"ra45s33wUt-C"}},{"cell_type":"markdown","source":["Задача: Создать чат бота для получения информации об исследованиях космоса\n","\n","Описание: Создайте комплексное приложение командной строки, которое будет использоваться в качестве панели управления исследованиями космоса. Данное приложение будет обращаться к https://api.nasa.gov/ для предоставления пользователям набора информации о космосе, включая:\n","\n","- Астрономическая картинка дня (APOD): Отображение APOD с пояснениями к нему.\n","- Фотографии с марсохода: позволяет пользователям выбирать и фильтровать фотографии с марсохода по дате и типу камеры.\n","- Объекты, сближающиеся с Землей (ОСЗ): Поиск и отображение информации об объекте, сближающихся с Землей, на определенную дату, включая их размеры и потенциальную опасность.\n","- Данные о космической погоде: Отображают последние данные о космической погоде, включая солнечные вспышки и геомагнитные бури.\n","Приложение должно позволять пользователям ориентироваться в этих функциях, корректно обрабатывать ошибки и обеспечивать удобство работы.\n","\n","Требования:\n","- Пользовательский ввод: Приложение должно предложить пользователю ввести данные, чтобы выбрать, какую функцию он хочет изучить.\n","- Проверка данных: Убедитесь, что пользовательские данные (например, даты) проверены.\n","- Обработка ошибок: Корректно обрабатывайте ошибки API и неверные ответы.\n","- Представление данных: Представляйте данные в четкой и организованной форме.\n","- Опция выхода: позволяет пользователям выходить из приложения в любое время."],"metadata":{"id":"G56D5mNCUwp5"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"wGeJM9n4UqUD","colab":{"base_uri":"https://localhost:8080/"},"outputId":"d0a560a4-7ebb-492f-8b56-d049da278edc","executionInfo":{"status":"ok","timestamp":1730904926302,"user_tz":-300,"elapsed":58078,"user":{"displayName":"Дарья Иванова","userId":"14793641154921052260"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Добро пожаловать\n","1. Получить астрономическую картинку дня (APOD)\n","2. Получить фотографии с марсохода\n","3. Получить объекты, сближающиеся с Землей\n","4. Получить данные о космической погоде\n","5. Выход\n","Выберите опцию (1-5): 1\n","\n","Астрономическая картинка дня: Comet Tsuchinshan-Atlas over the Dolomites\n","Comet Tsuchinshan-Atlas is now headed back to the outer Solar System.  The massive dusty snowball put on quite a show during its trip near the Sun, resulting in many impressive pictures from planet Earth during October.  The featured image was taken in mid-October and shows a defining visual feature of the comet -- its impressive anti-tail. The image captures Comet C/2023 A3 (Tsuchinshan–ATLAS) with impressively long dust and ion tails pointing up and away from the Sun, while the strong anti-tail -- composed of more massive dust particles -- trails the comet and points down and (nearly) toward the recently-set Sun. In the foreground is village of Tai di Cadore, Italy, with the tremendous Dolomite Mountains in the background.  Another comet, C/2024 S1 (ATLAS), once a candidate to rival Comet Tsuchinshan-Atlas in brightness, broke up last week during its close approach to our Sun.    Growing Gallery: Comet Tsuchinshan-ATLAS in 2024\n","Ссылка на изображение: https://apod.nasa.gov/apod/image/2411/CometA3Dolomites_Masi_960.jpg\n","\n","\n","Добро пожаловать\n","1. Получить астрономическую картинку дня (APOD)\n","2. Получить фотографии с марсохода\n","3. Получить объекты, сближающиеся с Землей\n","4. Получить данные о космической погоде\n","5. Выход\n","Выберите опцию (1-5): 2\n","Введите Sol-дату (например, 999): 999\n","Введите тип камеры (например, FHAZ): FHAZ\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FRB_486180911EDR_F0481570FHAZ00206M_.JPG(Дата:2015-05-29)\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FLB_486180911EDR_F0481570FHAZ00206M_.JPG(Дата:2015-05-29)\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FRB_486180202EDR_F0481570FHAZ00206M_.JPG(Дата:2015-05-29)\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FLB_486180202EDR_F0481570FHAZ00206M_.JPG(Дата:2015-05-29)\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FRB_486178915EDR_F0481570FHAZ00206M_.JPG(Дата:2015-05-29)\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FLB_486178915EDR_F0481570FHAZ00206M_.JPG(Дата:2015-05-29)\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FLB_486178187EDR_F0481570FHAZ00206M_.JPG(Дата:2015-05-29)\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FRB_486178187EDR_F0481570FHAZ00206M_.JPG(Дата:2015-05-29)\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FLB_486175319EDR_F0481570FHAZ00323M_.JPG(Дата:2015-05-29)\n","Фотография:http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/00999/opgs/edr/fcam/FRB_486175319EDR_F0481570FHAZ00323M_.JPG(Дата:2015-05-29)\n","\n","\n","\n","Добро пожаловать\n","1. Получить астрономическую картинку дня (APOD)\n","2. Получить фотографии с марсохода\n","3. Получить объекты, сближающиеся с Землей\n","4. Получить данные о космической погоде\n","5. Выход\n","Выберите опцию (1-5): 3\n","Введите дату в формате (гггг-мм-дд): 2006-08-02\n","Название: 459872 (2014 EK24), Размер: 126.4852777541 м, Потенциальная опасность: Нет\n","Название: (2011 NV), Размер: 187.9489824394 м, Потенциальная опасность: Нет\n","Название: (2017 BZ5), Размер: 208.9488468882 м, Потенциальная опасность: Нет\n","Название: (2017 MZ2), Размер: 44.6724713292 м, Потенциальная опасность: Нет\n","Название: (2017 RX2), Размер: 29.109850751 м, Потенциальная опасность: Нет\n","Название: (2020 BX3), Размер: 645.7136671674 м, Потенциальная опасность: Нет\n","Название: (2022 CO6), Размер: 36.6471308439 м, Потенциальная опасность: Нет\n","Название: (2022 ST124), Размер: 45.502994579 м, Потенциальная опасность: Нет\n","\n","\n","\n","Добро пожаловать\n","1. Получить астрономическую картинку дня (APOD)\n","2. Получить фотографии с марсохода\n","3. Получить объекты, сближающиеся с Землей\n","4. Получить данные о космической погоде\n","5. Выход\n","Выберите опцию (1-5): 5\n","Выход из приложения.\n"]}],"source":["import requests\n","import json\n","from datetime import datetime\n","\n","API_KEY = 'key'\n","\n","\n","def get_apod():\n","    url = f'https://api.nasa.gov/planetary/apod?api_key={API_KEY}'\n","    reply = requests.get(url)\n","    data = reply.json()\n","\n","    if reply.status_code != 200:\n","        print(\"Ошибка получения APOD\")\n","    else:\n","        print(f\"\\nАстрономическая картинка дня: {data['title']}\")\n","        print(data['explanation'])\n","        print(f\"Ссылка на изображение: {data['url']}\\n\")\n","\n","\n","def mars_photo():\n","    sol = input(\"Введите Sol-дату (например, 999): \")\n","    camera = input(\"Введите тип камеры (например, FHAZ): \")\n","    url = f'https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol={sol}&camera={camera}&api_key={API_KEY}'\n","\n","    reply = requests.get(url)\n","    data = reply.json()\n","\n","    if reply.status_code != 200 or 'photos' not in data:\n","        print(\"Ошибка получения фотографий\")\n","    else:\n","        if not data['photos']:\n","            print(\"Нет доступных фотографий для указанных Sol и камеры.\")\n","        else:\n","            for photo in data['photos']:\n","                print(f\"Фотография:{photo['img_src']}(Дата:{photo['earth_date']})\")\n","            print(\"\\n\")\n","\n","\n","def objects_near_earth():\n","    date = input(\"Введите дату в формате (гггг-мм-дд): \")\n","\n","    try:\n","        datetime.strptime(date, '%Y-%m-%d')\n","    except ValueError:\n","        print(\"Недопустимый формат даты! Используйте формат 'гггг-мм-дд'.\")\n","        return\n","\n","    url = f'https://api.nasa.gov/neo/rest/v1/feed?start_date={date}&end_date={date}&api_key={API_KEY}'\n","    reply = requests.get(url)\n","    data = reply.json()\n","\n","    if reply.status_code != 200 or 'near_earth_objects' not in data:\n","        print(\"Ошибка получения объектов\")\n","    else:\n","        if date not in data['near_earth_objects'] or not data['near_earth_objects'][date]:\n","            print(\"На указанную дату нет объектов\")\n","        else:\n","            for obj in data['near_earth_objects'][date]:\n","                print(f\"Название: {obj['name']}, Размер: {obj['estimated_diameter']['meters']['estimated_diameter_max']} м, \"\n","                      f\"Потенциальная опасность: {'Да' if obj['is_potentially_hazardous_asteroid'] else 'Нет'}\")\n","            print(\"\\n\")\n","\n","\n","def get_space_weather():\n","    url = f'https://api.nasa.gov/DONKI/CME?api_key={API_KEY}'\n","    reply = requests.get(url)\n","    data = reply.json()\n","\n","    if reply.status_code != 200:\n","        print(\"Ошибка получения данных о космической погоде\")\n","    else:\n","        if not data:\n","            print(\"Нет данных о космической погоде на данный момент.\")\n","        else:\n","            for event in data:\n","                event_name = event.get('event', 'Неизвестное событие')\n","                event_date = event.get('eventDate', 'Неизвестная дата')\n","                event_source = event.get('source', 'Неизвестный источник')\n","\n","                print(f\"Событие:{event_name},Дата:{event_date},Источник:{event_source}\")\n","            print(\"\\n\")\n","\n","\n","def main():\n","    while True:\n","        print(\"\\nДобро пожаловать\")\n","        print(\"1. Получить астрономическую картинку дня (APOD)\")\n","        print(\"2. Получить фотографии с марсохода\")\n","        print(\"3. Получить объекты, сближающиеся с Землей\")\n","        print(\"4. Получить данные о космической погоде\")\n","        print(\"5. Выход\")\n","\n","        choice = input(\"Выберите опцию (1-5): \")\n","\n","        if choice == '1':\n","            get_apod()\n","        elif choice == '2':\n","            mars_photo()\n","        elif choice == '3':\n","            objects_near_earth()\n","        elif choice == '4':\n","            get_space_weather()\n","        elif choice == '5':\n","            print(\"Выход из приложения.\")\n","            break\n","        else:\n","            print(\"Неверный выбор.Выберите другой вариант\")\n","\n","if __name__ == \"__main__\":\n","    main()"]},{"cell_type":"markdown","source":["# Задание 2"],"metadata":{"id":"ia9UtA0cU1Iy"}},{"cell_type":"markdown","source":["Описание задачи\n","\n","Цель этой задачи - создать скрипт на Python, который взаимодействует с API Чикагского института искусств (https://api.artic.edu/docs/) для извлечения и отображения произведений искусства. Скрипт должен позволять пользователям просматривать работы по страницам, фильтровать их по имени художника и просматривать подробную информацию о выбранных произведениях искусства. Ниже приведены требования и функциональные возможности, которые необходимо реализовать:\n","\n","Требования:\n","Извлекать произведения искусства:\n","\n","- Создайте функцию, которая извлекает список произведений искусства из API Чикагского института искусств.\n","Функция должна принимать параметр page для разбивки на страницы и возвращать список произведений искусства вместе с информацией о разбивке на страницы.\n","Фильтровать произведения искусства:\n","\n","- Реализуйте функцию, которая фильтрует список произведений искусства на основе имени указанного художника. Функция должна возвращать список работ, которые соответствуют имени художника (без учета регистра).\n","Отображать подробную информацию об оформлении:\n","\n","- Напишите функцию, которая отображает названия работ для пользователя и позволяет ему выбрать одну из них, введя соответствующий номер.\n","После выбора функция должна отображать подробную информацию о выбранном произведении, включая название, исполнителя, дату и носитель.\n","Разбивка на страницы и взаимодействие с пользователем:\n","\n","- Создайте основную функцию, которая управляет выборкой произведений и взаимодействием с пользователем.\n","\n","Разрешите пользователям перемещаться по страницам с произведениями искусства, выполнять фильтрацию по исполнителю или выходить из программы.\n","\n","Если страниц с произведениями искусства несколько, укажите варианты перехода к следующей странице, предыдущей странице, фильтрации по исполнителю или выхода из программы."],"metadata":{"id":"Ofu_GmqrU1Iy"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"jjUH1GznU1Iy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730906853926,"user_tz":-300,"elapsed":80760,"user":{"displayName":"Дарья Иванова","userId":"14793641154921052260"}},"outputId":"4b9e67a8-8f78-4cb2-9e9c-db2ffcf074cb"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Страница 1 из 1\n","\n","1. The Crucifixion - Francescuccio Ghissi (Italian, active 1359–1395)\n","2. Two Putti - Matteo di Giovanni (Italian, c. 1430–1495)\n","3. Fragment from Christ Carrying the Cross: Saint John the Evangelist - Jean Hey (Master of Moulins; Netherlandish, active in France, c. 1480-c.1504)\n","4. Scenes from the Life of Saint John the Baptist - Bartolomeo di Giovanni (Italian, active c. 1465-1501)\n","5. Elements I - Nancy Hemenway Barton (American, 1920–2008)\n","Mouse Island, Maine, and Washington, DC, United States\n","6. Linear - Designed by Joseph R. Bobrowicz (American, born 1926)\n","United States, Pennsylvania, Philadelphia\n","7. 3-D Squares - Bobbi Shortlidge (American, born 1944)\n","United States, Illinois, Evanston\n","8. The Tables Have Turned - Dawn Zero Erickson (American, born 1958)\n","United States, Minnesota, Red Wing\n","9. Panel (Upholstery Fabric) - Yvonne Palmer Pacanovsky Bobrowicz (American, 1928-2022)\n","United States, Pennsylvania, Philadelphia\n","10. Girafters (Furnishing Fabric) - Designed by Ben Rose (American, 1916–2004)\n","Produced by Ben Rose, Inc.\n","United States, Illinois, Chicago\n","11. Kyoto Evergreen (Furnishing Fabric) - Designed by Maya Romanoff (American, 1941-2014)\n","United States, Illinois, Chicago\n","12. Bedcover - Made for the wedding chest of Eliza Ann Hunnewell\n","United States, Massachusetts, Newton\n","13. Untitled, plate ten from See America First - H. C. Westermann (American, 1922-1981)\n","printed by Don Kelley\n","published by Tamarind Lithography Workshop (American, founded 19601976)\n","14. Rumble, from Brawling Spitfire Wrestling Series - Mickalene Thomas\n","American, born 1971\n","15. Ceremonial Hanging (palepai) - Lampung area, Sumatra, Indonesia\n","\n","Выберите действие:\n","1. Просмотреть подробности о произведении\n","2. Фильтровать по имени художника\n","3. Перейти на следующую страницу\n","4. Перейти на предыдущую страницу\n","5. Выход\n","Введите номер действия: 1\n","Введите номер произведения для подробного просмотра: 15\n","\n","Название: Ceremonial Hanging (palepai)\n","Исполнитель: Lampung area, Sumatra, Indonesia\n","Дата: 19th century\n","Носитель: Неизвестный носитель\n","\n","\n","Страница 1 из 1\n","\n","1. The Crucifixion - Francescuccio Ghissi (Italian, active 1359–1395)\n","2. Two Putti - Matteo di Giovanni (Italian, c. 1430–1495)\n","3. Fragment from Christ Carrying the Cross: Saint John the Evangelist - Jean Hey (Master of Moulins; Netherlandish, active in France, c. 1480-c.1504)\n","4. Scenes from the Life of Saint John the Baptist - Bartolomeo di Giovanni (Italian, active c. 1465-1501)\n","5. Elements I - Nancy Hemenway Barton (American, 1920–2008)\n","Mouse Island, Maine, and Washington, DC, United States\n","6. Linear - Designed by Joseph R. Bobrowicz (American, born 1926)\n","United States, Pennsylvania, Philadelphia\n","7. 3-D Squares - Bobbi Shortlidge (American, born 1944)\n","United States, Illinois, Evanston\n","8. The Tables Have Turned - Dawn Zero Erickson (American, born 1958)\n","United States, Minnesota, Red Wing\n","9. Panel (Upholstery Fabric) - Yvonne Palmer Pacanovsky Bobrowicz (American, 1928-2022)\n","United States, Pennsylvania, Philadelphia\n","10. Girafters (Furnishing Fabric) - Designed by Ben Rose (American, 1916–2004)\n","Produced by Ben Rose, Inc.\n","United States, Illinois, Chicago\n","11. Kyoto Evergreen (Furnishing Fabric) - Designed by Maya Romanoff (American, 1941-2014)\n","United States, Illinois, Chicago\n","12. Bedcover - Made for the wedding chest of Eliza Ann Hunnewell\n","United States, Massachusetts, Newton\n","13. Untitled, plate ten from See America First - H. C. Westermann (American, 1922-1981)\n","printed by Don Kelley\n","published by Tamarind Lithography Workshop (American, founded 19601976)\n","14. Rumble, from Brawling Spitfire Wrestling Series - Mickalene Thomas\n","American, born 1971\n","15. Ceremonial Hanging (palepai) - Lampung area, Sumatra, Indonesia\n","\n","Выберите действие:\n","1. Просмотреть подробности о произведении\n","2. Фильтровать по имени художника\n","3. Перейти на следующую страницу\n","4. Перейти на предыдущую страницу\n","5. Выход\n","Введите номер действия: 2\n","Введите имя художника для фильтрации: Nancy Hemenway Barton\n","\n","Найденные произведения искусства от 'Nancy Hemenway Barton':\n","1. Elements I - Nancy Hemenway Barton (American, 1920–2008)\n","Mouse Island, Maine, and Washington, DC, United States\n","\n","Страница 1 из 1\n","\n","1. The Crucifixion - Francescuccio Ghissi (Italian, active 1359–1395)\n","2. Two Putti - Matteo di Giovanni (Italian, c. 1430–1495)\n","3. Fragment from Christ Carrying the Cross: Saint John the Evangelist - Jean Hey (Master of Moulins; Netherlandish, active in France, c. 1480-c.1504)\n","4. Scenes from the Life of Saint John the Baptist - Bartolomeo di Giovanni (Italian, active c. 1465-1501)\n","5. Elements I - Nancy Hemenway Barton (American, 1920–2008)\n","Mouse Island, Maine, and Washington, DC, United States\n","6. Linear - Designed by Joseph R. Bobrowicz (American, born 1926)\n","United States, Pennsylvania, Philadelphia\n","7. 3-D Squares - Bobbi Shortlidge (American, born 1944)\n","United States, Illinois, Evanston\n","8. The Tables Have Turned - Dawn Zero Erickson (American, born 1958)\n","United States, Minnesota, Red Wing\n","9. Panel (Upholstery Fabric) - Yvonne Palmer Pacanovsky Bobrowicz (American, 1928-2022)\n","United States, Pennsylvania, Philadelphia\n","10. Girafters (Furnishing Fabric) - Designed by Ben Rose (American, 1916–2004)\n","Produced by Ben Rose, Inc.\n","United States, Illinois, Chicago\n","11. Kyoto Evergreen (Furnishing Fabric) - Designed by Maya Romanoff (American, 1941-2014)\n","United States, Illinois, Chicago\n","12. Bedcover - Made for the wedding chest of Eliza Ann Hunnewell\n","United States, Massachusetts, Newton\n","13. Untitled, plate ten from See America First - H. C. Westermann (American, 1922-1981)\n","printed by Don Kelley\n","published by Tamarind Lithography Workshop (American, founded 19601976)\n","14. Rumble, from Brawling Spitfire Wrestling Series - Mickalene Thomas\n","American, born 1971\n","15. Ceremonial Hanging (palepai) - Lampung area, Sumatra, Indonesia\n","\n","Выберите действие:\n","1. Просмотреть подробности о произведении\n","2. Фильтровать по имени художника\n","3. Перейти на следующую страницу\n","4. Перейти на предыдущую страницу\n","5. Выход\n","Введите номер действия: 5\n","Выход из программы.\n"]}],"source":["import requests\n","\n","API_URL = \"api_url\"\n","\n","\n","def f_artworks(page=1):\n","    params = {\n","        'page': page,\n","        'limit': 15,\n","        'fields': 'id,title,artist_display,date_display,medium'\n","    }\n","    response = requests.get(API_URL, params=params)\n","    if response.status_code != 200:\n","        print(\"Ошибка\", response.status_code)\n","        return None\n","\n","    data = response.json()\n","    artworks = data['data']\n","    pagination = data['pagination']\n","    return artworks, pagination\n","\n","\n","def filter_artworks_by_artist(artworks, artist_name):\n","    return [art for art in artworks if artist_name.lower() in art.get('artist_display', '').lower()]\n","\n","\n","def artwork_details(artwork):\n","    print(f\"\\nНазвание: {artwork.get('title', 'Неизвестное название')}\")\n","    print(f\"Исполнитель: {artwork.get('artist_display', 'Неизвестный исполнитель')}\")\n","    print(f\"Дата: {artwork.get('date_display', 'Неизвестная дата')}\")\n","    print(f\"Носитель: {artwork.get('medium', 'Неизвестный носитель')}\\n\")\n","\n","\n","def main():\n","    page = 1\n","    while True:\n","        artworks, pagination = f_artworks(page)\n","        if not artworks:\n","            print(\"Нет доступных произведений искусства\")\n","            break\n","\n","        current_page = pagination.get('current_page', 1)\n","        total_pagination = pagination.get('total_pagination', 1)\n","\n","        print(f\"\\nСтраница {current_page} из {total_pagination}\\n\")\n","\n","        for i, artwork in enumerate(artworks, start=1):\n","            print(f\"{i}. {artwork['title']} - {artwork['artist_display']}\")\n","\n","        print(\"\\nВыберите действие:\")\n","        has_next_page = pagination.get('has_next_page', False)\n","        has_previous_page = pagination.get('has_previous_page', False)\n","\n","        print(\"1. Просмотреть подробности о произведении\")\n","        print(\"2. Фильтровать по имени художника\")\n","        print(\"3. Перейти на следующую страницу\")\n","        print(\"4. Перейти на предыдущую страницу\")\n","        print(\"5. Выход\")\n","\n","        choice = input(\"Введите номер действия: \")\n","\n","        if choice == '1':\n","            art_choice = int(input(\"Введите номер произведения для подробного просмотра: \")) - 1\n","            if 0 <= art_choice < len(artworks):\n","                artwork_details(artworks[art_choice])\n","            else:\n","                print(\"Неверный номер произведения.\")\n","        elif choice == '2':\n","            artist_name = input(\"Введите имя художника для фильтрации: \")\n","            artworks = filter_artworks_by_artist(artworks, artist_name)\n","            if artworks:\n","                print(f\"\\nНайденные произведения искусства от '{artist_name}':\")\n","                for i, artwork in enumerate(artworks, start=1):\n","                    print(f\"{i}. {artwork['title']} - {artwork['artist_display']}\")\n","            else:\n","                print(f\"Нет произведений искусства от '{artist_name}'.\")\n","        elif choice == '3' and has_next_page:\n","            page += 1\n","        elif choice == '4' and has_previous_page:\n","            page -= 1\n","        elif choice == '5':\n","            print(\"Выход из программы.\")\n","            break\n","        else:\n","            print(\"Некорректный выбор\")\n","\n","if __name__ == \"__main__\":\n","    main()"]},{"cell_type":"markdown","source":["# Задание 3"],"metadata":{"id":"eecUb-akU1ji"}},{"cell_type":"markdown","source":["Задача: Создать программу по управлению портфелем криптовалют\n","\n","Цель: Создать скрипт на Python, который извлекает цены на криптовалюты в режиме реального времени, позволяет пользователям управлять портфелем криптовалют, вычисляет общую стоимость портфеля, отслеживает изменения цен и предоставляет исторические данные о ценах для анализа.\n","\n","Требования:\n","Получение текущих цен на криптовалюты:\n","\n","Используйте https://docs.coingecko.com/ для получения актуальных цен на список криптовалют.\n","\n","Управление портфелем:\n","\n","- Позволяет пользователю создавать портфель криптовалют и управлять им, указывая количество каждой криптовалюты, которой он владеет.\n","- Расчитывает общую стоимость портфеля в указанной фиатной валюте (например, долларах США).\n","\n","Отслеживание изменения цен:\n","\n","- Отображение процентного изменения цены для каждой криптовалюты в портфеле за последние 24 часа.\n","- Выделите все криптовалюты, стоимость которых значительно увеличилась или снизилась.\n","\n","Поиск исторических данных о ценах:\n","\n","- Получение исторических данных о ценах на указанную криптовалюту за последнюю неделю.\n","- Предоставьте пользователю возможность визуализировать эти данные в простом текстовом формате (например, цены за день).\n","\n","Взаимодействие с пользователем:\n","\n","- Реализуйте интерфейс командной строки для ввода данных пользователем.\n","- Предоставьте опции для получения текущих цен, управления портфелем, просмотра изменений цен или анализа исторических данных.\n"],"metadata":{"id":"jsK7IKptU1ji"}},{"cell_type":"code","source":[],"metadata":{"id":"_0DToTqlvywa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Дополнительно: Задание 4"],"metadata":{"id":"QGrsZrv5U1s8"}},{"cell_type":"markdown","source":["Задание 4: Проектное\n","\n","Вам необходимо самостоятельно найти откртое API предоставляющее информацию в открытом доступе и реализовать собственный проект!\n","\n","\n","Критерии приемки результата:\n","\n","- Проект включает в себя не менее 5 возможостей для пользователя\n","- Проект позволяет использовать все возможности проекта пользователю при помощи взаимодействия через коммандную строку\n","- Проект работает с открытым API (это значит что при проверке вашей работы преподавателем, преподавателю необходимо просто запустить ячейку с кодом вашего проекта и она будет работать без дополнительных манипуляции)\n","- Проект должен обязательно включать в себя ряд используемых конструкции:\n","    - Функции\n","    - Условные конструкции\n","    - Ввод/вывод\n","    - Словари/Списки\n","- Допускается использование библиотек:\n","    - requests\n","    - datetime\n","    - random"],"metadata":{"id":"qs_XITmYU1s8"}},{"cell_type":"markdown","source":["**Здесь добавьте описание вашего проекта**"],"metadata":{"id":"VKXhaJi4FL0B"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"wiA55k1KU1s8"},"outputs":[],"source":["#  А здесь код"]}]}