{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729677040789}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Иванова Дарья Сергеевна"],"metadata":{"id":"CaGUG-Q4ycPz"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["def duplicate(ipl):\n","    unique = []\n","\n","    for element in ipl:\n","      if element not in unique:\n","        unique.append(element)\n","\n","    return unique\n","\n","\n","entered_numbers = input(\"Введите значения через пробел: \").split()\n","result = duplicate(entered_numbers)\n","print(result)\n","\n","\n"],"metadata":{"id":"ml5gnbPXbeju","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729678307923,"user_tz":-300,"elapsed":8824,"user":{"displayName":"Дарья Иванова","userId":"14793641154921052260"}},"outputId":"4592102d-0dac-495b-d007-7bf5c9f85f07"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите значения через пробел: apple banana apple 1 3 4 4 5\n","['apple', 'banana', '1', '3', '4', '5']\n"]}]},{"cell_type":"markdown","source":["# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["def simple(n):\n","    if n <= 1:\n","        return False\n","    for i in range(2, int(n**0.5) + 1):\n","        if n % i == 0:\n","            return False\n","    return True\n","\n","\n","def find_simple(number_1, number_2):\n","    list_simple = []\n","\n","    for num in range(number_1, number_2 + 1):\n","        if simple(num):\n","            list_simple.append(num)\n","    return list_simple\n","\n","\n","number_1 = int(input(\"Введите первое число: \"))\n","number_2 = int(input(\"Введите второе число: \"))\n","result = find_simple(number_1, number_2)\n","print(result)\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"XSMJnLgrc6Bf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729680175862,"user_tz":-300,"elapsed":5089,"user":{"displayName":"Дарья Иванова","userId":"14793641154921052260"}},"outputId":"17fd0480-8ca4-456a-f0ff-c1198cb6e9db"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите первое число: 10\n","Введите второе число: 50\n","[11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["def unity(keys, values):\n","    result = {}\n","\n","    for i in range(len(keys)):\n","        result[keys[i]] = values[i]\n","    return result\n","\n","\n","keys = ['a', 'b', 'c', 'e']\n","values = [1, 2, 3, 4]\n","end = unity(keys, values)\n","print(end)\n","\n"],"metadata":{"id":"CRvhHTjCdvjS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729681926647,"user_tz":-300,"elapsed":7,"user":{"displayName":"Дарья Иванова","userId":"14793641154921052260"}},"outputId":"d15e8b00-57ee-4210-ad1c-d596e5eac3d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n"]}]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","result = { }\n","summa = 0\n","count = 0\n","moda = 0\n","\n","\n","for num in numbers:\n","    count_2 = 0\n","    summa += num\n","    count += 1\n","\n","    for num_1 in numbers:\n","        if num == num_1:\n","            count_2 += 1\n","\n","    if count_2 > 1:\n","        moda = num\n","\n","\n","average = summa / count\n","mediana = count // 2\n","result['mean'] = average\n","result['median'] = numbers[mediana]\n","result['mode'] = moda\n","result['sum'] = summa\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kdruwtqUHnmD","executionInfo":{"status":"ok","timestamp":1729787019943,"user_tz":-300,"elapsed":1143,"user":{"displayName":"Дарья Иванова","userId":"14793641154921052260"}},"outputId":"b797c0d8-3d6b-407e-e010-bda415e64599"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n"]}]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["def find_long_word(n):\n","    words = []\n","    actual_word = \"\"\n","\n","\n","    for symbol in n:\n","        if symbol == ' ':\n","            if actual_word:\n","                words.append(actual_word)\n","                actual_word = \"\"\n","        else:\n","            actual_word += symbol\n","\n","\n","    if actual_word:\n","        words.append(actual_word)\n","\n","\n","    longest_word = \"\"\n","    longest_index = 0\n","    index = 1\n","\n","\n","    for word in words:\n","        length_word = 0\n","        for i in word:\n","            length_word += 1\n","\n","\n","        longest_length_word = 0\n","        for i in longest_word:\n","            longest_length_word += 1\n","        if length_word > longest_length_word:\n","            longest_word = word\n","            longest_index = index\n","        index += 1\n","\n","    return longest_word, longest_index\n","\n","\n","n='Страдание и боль всегда обязательны для широкого сознания и глубокого сердца'\n","longest_word, place = find_long_word(n)\n","print(f\"Самое длинное слово под номером {place}: {longest_word}\")"],"metadata":{"id":"rC5DpHHLsDYp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729788462427,"user_tz":-300,"elapsed":498,"user":{"displayName":"Дарья Иванова","userId":"14793641154921052260"}},"outputId":"353aee1d-6a8d-4403-e6b5-7cb61b6ff340"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Самое длинное слово под номером 5: обязательны\n"]}]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["students = {}\n","\n","def add_student():\n","    name = input(\"Введите имя студента: \")\n","    while name in students:\n","        print(\"Студент с таким именем уже существует.\")\n","        name = input(\"Введите имя студента: \")\n","\n","    grades_str = input(\"Введите оценки студента через запятую: \")\n","    try:\n","        grades = [int(grade) for grade in grades_str.split(',')]\n","        students[name] = grades\n","        print(f\"Студент {name} добавлен.\")\n","    except ValueError:\n","        print(\"Неверный формат оценок. Введите числа через запятую.\")\n","\n","\n","def calculate_average(grades):\n","    if not grades:\n","        return 0\n","    return sum(grades) / len(grades)\n","\n","\n","def get_all_students():\n","    print(\"Список всех студентов:\")\n","    for name, grades in students.items():\n","        average = calculate_average(grades)\n","        print(f\"  {name}: Оценки - {grades}, Средний балл - {average:.2f}\")\n","\n","\n","def search_student():\n","    name = input(\"Введите имя студента для поиска: \")\n","    if name in students:\n","        grades = students[name]\n","        average = calculate_average(grades)\n","        print(f\"Оценки {name}: {grades}\")\n","        print(f\"Средний балл {name}: {average:.2f}\")\n","    else:\n","        print(f\"Студент {name} не найден.\")\n","\n","\n","while True:\n","    print(\"\\nМеню:\")\n","    print(\"1. Добавить студента\")\n","    print(\"2. Показать всех студентов\")\n","    print(\"3. Найти студента\")\n","    print(\"4. Выход\")\n","\n","    choice = input(\"Выберите действие: \")\n","\n","    if choice == '1':\n","        add_student()\n","    elif choice == '2':\n","        get_all_students()\n","    elif choice == '3':\n","        search_student()\n","    elif choice == '4':\n","        break\n","    else:\n","        print(\"Неверный выбор. Попробуйте еще раз.\")"],"metadata":{"id":"cvhlltVbdyoL","colab":{"base_uri":"https://localhost:8080/"},"outputId":"a3bcabce-7f54-4e5c-cf7d-54666c1846f7","executionInfo":{"status":"ok","timestamp":1729794330250,"user_tz":-300,"elapsed":127910,"user":{"displayName":"Дарья Иванова","userId":"14793641154921052260"}}},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Меню:\n","1. Добавить студента\n","2. Показать всех студентов\n","3. Найти студента\n","4. Выход\n","Выберите действие: 1\n","Введите имя студента: Илья\n","Введите оценки студента через запятую: 5,4,5,5,4\n","Студент Илья добавлен.\n","\n","Меню:\n","1. Добавить студента\n","2. Показать всех студентов\n","3. Найти студента\n","4. Выход\n","Выберите действие: 1\n","Введите имя студента: Саша\n","Введите оценки студента через запятую: 3,4,5,4,4\n","Студент Саша добавлен.\n","\n","Меню:\n","1. Добавить студента\n","2. Показать всех студентов\n","3. Найти студента\n","4. Выход\n","Выберите действие: 1\n","Введите имя студента: Влад\n","Введите оценки студента через запятую: 2,3,3,4,3\n","Студент Влад добавлен.\n","\n","Меню:\n","1. Добавить студента\n","2. Показать всех студентов\n","3. Найти студента\n","4. Выход\n","Выберите действие: 2\n","Список всех студентов:\n","  Илья: Оценки - [5, 4, 5, 5, 4], Средний балл - 4.60\n","  Саша: Оценки - [3, 4, 5, 4, 4], Средний балл - 4.00\n","  Влад: Оценки - [2, 3, 3, 4, 3], Средний балл - 3.00\n","\n","Меню:\n","1. Добавить студента\n","2. Показать всех студентов\n","3. Найти студента\n","4. Выход\n","Выберите действие: 3\n","Введите имя студента для поиска: Саша\n","Оценки Саша: [3, 4, 5, 4, 4]\n","Средний балл Саша: 4.00\n","\n","Меню:\n","1. Добавить студента\n","2. Показать всех студентов\n","3. Найти студента\n","4. Выход\n","Выберите действие: 4\n"]}]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":["import random\n","\n","def quiz(questions, answers):\n","    round_q = random.sample(list(questions.keys()), 5)\n","    scores = 0\n","    for k in round_q:\n","        print(k)\n","        answer = input('Введите ответ с заглавной буквы: ')\n","        if answer == questions[k]:\n","            print('Верно, 1 балл')\n","            answers[k] = [questions[k], 1]\n","            scores += 1\n","        else:\n","            print('Неверно, 0 балл')\n","            answers[k] = [questions[k], 0]\n","    print('Итоговый балл:', scores, 'из 5')\n","    return answers\n","\n","def new_question(questions):\n","    question = input('Введите новый вопрос: ')\n","    answer = input('Введите правильный ответ: ')\n","    questions[question] = answer\n","    print(questions)\n","    return questions\n","\n","questions = {\n","    'Как называется самая известная смотровая площадка Москвы?': 'Воробьёвы горы',\n","    'Назовите страну с самой высокой продолжительностью жизни': 'Китай',\n","    'Как называется прямая линия, у которой есть начало, но нет конца?': 'Луч',\n","    'Как называется крупнейшая технологическая компания в Южной Корее?': 'Samsung',\n","    'Кто был премьер-министром Великобритании с 1841 по 1846 год?': 'Роберт Пил',\n","    'Столица Португалии?': 'Лиссабон',\n","    'Что выкрал Прометей у богов?': 'Огонь',\n","    'Самая протяжённая река в мире ': 'Нил',\n","    'Прибор для определения влажности воздуха': 'Гигрометр',\n","    'Чья это цитата: \"код читается гораздо чаще, чем пишется\"?': 'Гвидо Ван Россума'\n","}\n","answers = {}\n","while True:\n","    request = input('Выберите действие: начать викторину, добавить вопрос, завершить: ')\n","    if request == 'начать викторину':\n","        quiz(questions, answers)\n","    elif request == 'добавить вопрос':\n","        questions = new_question(questions)\n","    elif request == 'завершить':\n","        break\n","    else:\n","        print('Неправильный выбор. Попробуйте еще раз.')"],"metadata":{"id":"DhxyYwHwh2V4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733981835790,"user_tz":-300,"elapsed":126781,"user":{"displayName":"Дарья Иванова","userId":"14793641154921052260"}},"outputId":"92d6151e-ca4a-4c93-8784-aecceb130946"},"execution_count":5,"outputs":[{"name":"stdout","output_type":"stream","text":["Выберите действие: начать викторину, добавить вопрос, завершить: начать викторину\n","Назовите страну с самой высокой продолжительностью жизни\n","Введите ответ с заглавной буквы: Китай\n","Верно, 1 балл\n","Прибор для определения влажности воздуха\n","Введите ответ с заглавной буквы: Гигрометр\n","Верно, 1 балл\n","Как называется прямая линия, у которой есть начало, но нет конца?\n","Введите ответ с заглавной буквы: завершить\n","Неверно, 0 балл\n","Как называется крупнейшая технологическая компания в Южной Корее?\n","Введите ответ с заглавной буквы: Samsung\n","Верно, 1 балл\n","Кто был премьер-министром Великобритании с 1841 по 1846 год?\n","Введите ответ с заглавной буквы: Роберт Пил\n","Верно, 1 балл\n","Итоговый балл: 4 из 5\n","Выберите действие: начать викторину, добавить вопрос, завершить: завершить \n","Неправильный выбор. Попробуйте еще раз.\n","Выберите действие: начать викторину, добавить вопрос, завершить: завершить\n"]}]}]}